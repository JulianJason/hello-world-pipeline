name: CI pipeline

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
        # 4a checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

        # 4b restore dependencies
      - name: Install dependencies
        run: npm ci
        
        # 4c compile/build - not applicable because its just a node script
      - name: Build project
        run: npm run build --if-present
        
        # 4d Run code in github pipeline -- should I write a jest test instead here?
      - name: Run code to output to stdout
        run: npm start

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "hello-world-artifact"
          path: src
          retention-days: 7
          if-no-files-found: error

  containerize:
    needs: [ build-run ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        # 6a Build docker image
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/julianjason/hello-world-pipeline:${{ github.sha }} .

        # 6b Add open source docker image scanning tool
        # https://github.com/marketplace/actions/aqua-security-trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/julianjason/hello-world-pipeline:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

        # 6c Run the docker image in the pipeline
      - name: Test run container in pipeline
        run: |
          docker run docker.io/julianjason/hello-world-pipeline:${{ github.sha }}